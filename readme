A Dockerfile is a simple text file that contains the commands a user could call to assemble 
an image whereas Docker Compose is a tool for defining and running multi-container Docker applications.
dockerfile for a single application and docker-compose for multiple application/images to run together.


1:Docker Desktop:
enable virtualization on your PC.
turn on HYPER-V from turn on/off windows features.
download and install Docker desktop.
to install Docker turn of your antivirus.
after installation while starting docker desktop if no user for docker warning/error 
search for computer managment => local users and groups => groups => docker users => add your user
open docker click next next untill docker dashboard (or) run docker as administator.

2:Node js Project:
create node js project 
create a Dockerfile in root directory named as Dockerfile other will throw errors while building docker image
add docker commands/code as given in this project dockerFile.

3:Docker Image:
create a docker image
open cmd from your project root directory
commands to run
docker build -t node-docker-app3 .
docker run -it -p 5000:5000 node-docker-app3

if you change anything before running docker first build with this command and then run
docker build -t node-docker-app3 .
docker run -it -p 5000:5000  node-docker-app3 



2:If you want to connect your application to database in this project application is conneted to mongodb 
    database.
    for this 
    create docker-compose.yml file and paste the code written in docker-compose.yml file of this application.
    start terminal/cmd from your project root directory
    run these commands:
    a:) docker-compose build
    b:) docker-compose up 


    your project is now up and running.

    to stop your app 
    docker-compose down

//how to call another app api running in docker container from app running in diffrent container.
in our case beam_microservices app rest api calls from apigateway to other microservices 

//in this file how to connect 2 applications with same network runnning in diffrent containers.
in this beam microservices project 
apigateway is the main service that will serve all the requests.
apigateway is making rest api calls to another microservices like quoteservice,quizservice,prizeservice
and courseservice running in thier own containers in docker.

when you compose docker file it creates a seperate ip address or hostname for that containers
so we will make a network bridge to connect all of them so they can communicate with each other.

steps involved .

(i)for apigateway
docker build -t beam-micro-service-apigateway
docker-compose build
docker-compose up

(i)for quoteservice
docker build -t beam-micro-quote-service
docker-compose build
docker-compose up

//now create a docker network
docker network create beam_microservices-network
docker network connect myNetwork apigateway_web_1   =>//apigateway_web_1 name of container assigned by docker . you can check it by docker ps
docker network connect myNetwork quoteservice_web_1   =>//quoteservice_web_1 name of container assigned by docker . you can check it by docker ps

//you can inspect you network by this commanf
docker network inspect beam_microservices-network

restart the containers